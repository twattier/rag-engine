version: '3.8'

services:
  neo4j:
    image: neo4j:5.15-community
    container_name: rag-engine-neo4j
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH:-neo4j/password}
      - NEO4J_dbms_memory_heap_initial__size=${NEO4J_HEAP_INITIAL:-1g}
      - NEO4J_dbms_memory_heap_max__size=${NEO4J_HEAP_MAX:-2g}
      - NEO4J_dbms_memory_pagecache_size=${NEO4J_PAGECACHE:-1g}
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
    networks:
      - rag-engine-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    container_name: rag-engine-api
    ports:
      - "${API_PORT:-9100}:9100"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_AUTH=${NEO4J_AUTH:-neo4j/password}
      - NEO4J_DATABASE=neo4j
      - API_KEY=${API_KEY:-change-me-in-production}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:8080}
      - RAG_ANYTHING_URL=${RAG_ANYTHING_URL:-http://rag-anything:8001}
      # LLM Provider Configuration
      - LLM_PROVIDER=${LLM_PROVIDER:-ollama}
      - LLM_ENDPOINT=${LLM_ENDPOINT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - AZURE_API_KEY=${AZURE_API_KEY}
      - AZURE_API_BASE=${AZURE_API_BASE}
      - AZURE_API_VERSION=${AZURE_API_VERSION:-2024-02-15-preview}
      - AZURE_DEPLOYMENT_NAME=${AZURE_DEPLOYMENT_NAME}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://host.docker.internal:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-qwen2.5:7b-instruct-q4_K_M}
      # Embedding Provider Configuration
      - EMBEDDING_PROVIDER=${EMBEDDING_PROVIDER:-local}
      - LOCAL_EMBEDDING_MODEL=${LOCAL_EMBEDDING_MODEL:-all-MiniLM-L6-v2}
      - EMBEDDING_DIM=${EMBEDDING_DIM:-384}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-3-small}
      - OPENAI_EMBEDDING_DIM=${OPENAI_EMBEDDING_DIM:-1536}
      # LightRAG Configuration
      - LIGHTRAG_WORKING_DIR=${LIGHTRAG_WORKING_DIR:-/app/lightrag_cache}
      - LIGHTRAG_MAX_TOKENS=${LIGHTRAG_MAX_TOKENS:-32768}
      - LIGHTRAG_MAX_EMBED_TOKENS=${LIGHTRAG_MAX_EMBED_TOKENS:-8192}
      - ENTITY_TYPES_CONFIG_PATH=${ENTITY_TYPES_CONFIG_PATH:-/app/config/entity-types.yaml}
    volumes:
      - ./services/api:/app
      - ./shared:/app/shared
      - ./config:/app/config
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - rag-engine-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 9100 --reload
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9100/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  lightrag:
    build:
      context: ./services/lightrag
      dockerfile: Dockerfile
    container_name: rag-engine-lightrag
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_AUTH=${NEO4J_AUTH:-neo4j/password}
      - LLM_PROVIDER=${LLM_PROVIDER:-ollama}
      - LLM_ENDPOINT=${LLM_ENDPOINT}
      - EMBEDDING_PROVIDER=${EMBEDDING_PROVIDER:-local}
      - LOCAL_EMBEDDING_MODEL=${LOCAL_EMBEDDING_MODEL:-all-MiniLM-L6-v2}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./services/lightrag:/app
      - ./shared:/app/shared
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - rag-engine-network

  rag-anything:
    build:
      context: ./services/rag-anything
      dockerfile: Dockerfile
    container_name: rag-engine-rag-anything
    ports:
      - "${RAG_ANYTHING_PORT:-8001}:8001"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - HOST=0.0.0.0
      - PORT=8001
      - MAX_FILE_SIZE=${MAX_FILE_SIZE_MB:-50}000000
      - UPLOAD_DIR=/tmp/rag-anything-uploads
    volumes:
      - ./services/rag-anything:/app
      - ./shared:/app/shared
    networks:
      - rag-engine-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  neo4j-data:
    name: ${COMPOSE_PROJECT_NAME:-rag-engine}_neo4j-data
  neo4j-logs:
    name: ${COMPOSE_PROJECT_NAME:-rag-engine}_neo4j-logs

networks:
  rag-engine-network:
    name: ${COMPOSE_PROJECT_NAME:-rag-engine}_network
    driver: bridge
